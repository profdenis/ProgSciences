{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Cours de programmation en sciences","text":"<p>Auteur : Denis Rinfret</p>"},{"location":"#ressources","title":"Ressources","text":"<ol> <li>Documentation Python</li> <li>Livres :<ul> <li>\u00c0 venir</li> </ul> </li> </ol>"},{"location":"#logiciels","title":"Logiciels","text":"<ol> <li>Python<ul> <li>T\u00e9l\u00e9chargez et installez la derni\u00e8re version stable disponible</li> </ul> </li> <li>PyCharm Community Edition<ul> <li>Ne t\u00e9l\u00e9chargez pas la version professionnelle</li> <li>Descendez vers le bas de la page pour trouver la version Community</li> </ul> </li> </ol>"},{"location":"Algorithmes/01_Premiers_Algorithmes/","title":"Introduction aux algorithmes","text":""},{"location":"Algorithmes/01_Premiers_Algorithmes/#algorithmes-definitions","title":"Algorithmes : D\u00e9finitions","text":"<p>Commen\u00e7ons par quelques d\u00e9finitions du mot algorithme :</p> <ul> <li>Cambridge Dictionary<ul> <li>une liste d\u2019instructions pour r\u00e9soudre un probl\u00e8me</li> <li>un ensemble d\u2019instructions ou de r\u00e8gles math\u00e9matiques qui, habituellement   donn\u00e9es \u00e0 un ordinateur, aideront \u00e0 calculer une r\u00e9ponse \u00e0 un   probl\u00e8me</li> </ul> </li> <li>Merriam-Webster<ul> <li>une proc\u00e9dure pour r\u00e9soudre un probl\u00e8me math\u00e9matique (comme celui de   trouver le plus grand diviseur commun) en un nombre fini d\u2019\u00e9tapes qui   implique souvent la r\u00e9p\u00e9tition d\u2019une op\u00e9ration</li> <li>plus g\u00e9n\u00e9ralement : une proc\u00e9dure \u00e9tape par \u00e9tape pour r\u00e9soudre un   probl\u00e8me ou accomplir une certaine fin</li> </ul> </li> <li>Geeks for Geeks<ul> <li>Un ensemble fini de r\u00e8gles ou d\u2019instructions \u00e0 suivre dans les calculs   ou d\u2019autres op\u00e9rations pour r\u00e9soudre des probl\u00e8mes</li> <li>Une proc\u00e9dure pour r\u00e9soudre un probl\u00e8me math\u00e9matique en un nombre fini   d\u2019\u00e9tapes qui implique souvent des op\u00e9rations r\u00e9cursives</li> </ul> </li> <li>Autres d\u00e9finitions possibles :<ol> <li>Un algorithme est une proc\u00e9dure bien d\u00e9finie qui permet \u00e0 un ordinateur    de r\u00e9soudre un probl\u00e8me. Une autre fa\u00e7on de d\u00e9crire un algorithme est de    dire qu\u2019il s\u2019agit d\u2019une approche \u00e9tape par \u00e9tape pour r\u00e9soudre un    probl\u00e8me ou accomplir une t\u00e2che.</li> <li>En informatique et en math\u00e9matiques, un algorithme est une s\u00e9quence    d\u2019instructions dont le principal objectif est de r\u00e9soudre un probl\u00e8me    sp\u00e9cifique, d\u2019effectuer une certaine action ou de calculer. Dans certains    cas, les algorithmes sont utilis\u00e9s pour le traitement des donn\u00e9es et les    t\u00e2ches de raisonnement automatis\u00e9.</li> <li>Un algorithme est un ensemble sp\u00e9cifique d\u2019instructions con\u00e7ues pour    effectuer une t\u00e2che particuli\u00e8re. Cela peut \u00eatre un processus simple,    comme la multiplication de deux nombres, ou une op\u00e9ration complexe, comme    la lecture d\u2019un fichier vid\u00e9o compress\u00e9. Les moteurs de recherche    utilisent des algorithmes complexes pour trier les pages Web pertinentes    parmi des millions de r\u00e9sultats.</li> <li>Un algorithme en informatique est une proc\u00e9dure bien d\u00e9finie qui prend    certaines valeurs en entr\u00e9e et les traite pour produire une certaine    valeur en sortie. Les algorithmes sont essentiels pour l\u2019ex\u00e9cution de    proc\u00e9dures \u00e9tape par \u00e9tape pour les calculs et le traitement des donn\u00e9es.</li> <li>Un algorithme est une s\u00e9quence de comportement \u00e9tape par \u00e9tape qui    d\u00e9finit un ensemble de calculs. Ils sont utilis\u00e9s pour le calcul, le    traitement des donn\u00e9es, le raisonnement automatis\u00e9 et d\u2019autres t\u00e2ches.</li> </ol> </li> </ul> <p>Veuillez noter qu\u2019un algorithme doit \u00eatre clair et sans ambigu\u00eft\u00e9, il doit avoir des entr\u00e9es et des sorties bien d\u00e9finies, et il doit \u00eatre fini.</p> <p>Lors de la conception d\u2019un algorithme, il y aura g\u00e9n\u00e9ralement des entr\u00e9es donn\u00e9es \u00e0 l\u2019algorithme. Ensuite, apr\u00e8s avoir effectu\u00e9 des calculs en utilisant ces entr\u00e9es, les r\u00e9sultats seront \u00e9mis ou renvoy\u00e9s \u00e0 un utilisateur, ou \u00e0 un autre algorithme qui utilisera ces r\u00e9sultats pour effectuer ses propres calculs \u00e0 \u00eatre sortis ou renvoy\u00e9s. En d\u2019autres termes, les algorithmes pourraient \u00eatre cha\u00een\u00e9s les uns \u00e0 la suite des autres.</p>"},{"location":"Algorithmes/01_Premiers_Algorithmes/#notation-sous-forme-de-diagrammes","title":"Notation sous forme de diagrammes","text":"<p>Pour repr\u00e9senter les algorithmes graphiquement, nous allons utiliser diagrammes d\u2019\u00e9tats UML, en utilisant la notation disponible dans le logiciel PlantUML.</p> <p>Pour repr\u00e9senter les algorithmes de mani\u00e8re graphique, nous utiliserons les Diagrammes d\u2019Activit\u00e9, et nous utiliserons PlantUML pour les dessiner. Nous repr\u00e9senterons \u00e9galement les algorithmes en pseudocode, dans une notation similaire \u00e0 celle du langage de programmation Python. Plus tard, apr\u00e8s avoir discut\u00e9 des types de donn\u00e9es et de certains autres sujets, nous \u00e9crirons directement les algorithmes dans le langage de programmation Python. Le diagramme suivant montre la notation pour les diagrammes d\u2019activit\u00e9 les plus basiques.</p> <p></p> Code PlantUML <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\nnote right \n    noeud de d\u00e9part\nend note\n:some action;\nnote right\n   action simple : lire une valeur, faire un calcul, ...\nend note\n:some other action;\nstop\nnote right\n    noeud de fin\nend note\n@enduml\n</code></pre>"},{"location":"Algorithmes/01_Premiers_Algorithmes/#exemples","title":"Exemples","text":""},{"location":"Algorithmes/01_Premiers_Algorithmes/#calcul-de-laire-dun-rectangle","title":"Calcul de l\u2019aire d\u2019un rectangle","text":"<p>Commen\u00e7ons par un exemple simple : comment calculons-nous l\u2019aire d\u2019un rectangle ? Nous avons besoin de 2 valeurs pour calculer l\u2019aire d\u2019un rectangle : sa <code>largeur</code> et sa <code>hauteur</code>. Nous supposons pour l\u2019instant que ces 2 valeurs seront entr\u00e9es dans le programme par un utilisateur, \u00e0 l\u2019aide d\u2019un dispositif d\u2019entr\u00e9e (probablement un clavier), et que les r\u00e9sultats seront affich\u00e9s \u00e0 l\u2019utilisateur \u00e0 l\u2019aide d\u2019un dispositif de sortie (probablement un \u00e9cran). Nous verrons plus tard que les entr\u00e9es et les sorties peuvent ne pas \u00eatre prises ou donn\u00e9es directement par/aux utilisateurs, mais pourraient plut\u00f4t \u00eatre donn\u00e9es \u00e0 une fonction en tant que param\u00e8tres, ou renvoy\u00e9es par une fonction.</p> <ul> <li>Entr\u00e9es : la <code>largeur</code> et la <code>hauteur</code> du rectangle</li> <li>Sortie : l\u2019<code>aire</code> du rectangle</li> </ul>"},{"location":"Algorithmes/01_Premiers_Algorithmes/#diagramme","title":"Diagramme","text":"Code PlantUML <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:entrer largeur;\n:entrer hauteur;\n:aire = largeur * hauteur;\n:afficher aire;\nstop\n@enduml\n</code></pre>"},{"location":"Algorithmes/01_Premiers_Algorithmes/#pseudocode","title":"Pseudocode","text":"<pre><code>largeur = entrer()\nhauteur = entrer()\naire = largeur * hauteur\nafficher(aire)\n</code></pre>"},{"location":"Algorithmes/01_Premiers_Algorithmes/#discussion","title":"Discussion","text":"<p>Certaines actions concernent le calcul de certaines valeurs bas\u00e9es sur d\u2019autres valeurs, comme <code>aire = largeur * hauteur</code>. Notez que nous utilisons <code>*</code> comme symbole de multiplication. Dans ce cas, le calcul <code>largeur * hauteur</code> est \u00e9crit \u00e0 droite du signe \u00e9gal (<code>=</code>), et le r\u00e9sultat est conserv\u00e9 dans <code>aire</code>, qui sera affich\u00e9 dans l\u2019\u00e9tape suivante.</p> <p>Dans cet exemple, il y a 3 variables : <code>largeur</code>, <code>hauteur</code> et <code>aire</code>. Ces variables sont utilis\u00e9es pour repr\u00e9senter ou retenir certaines valeurs qui seront entr\u00e9es ou calcul\u00e9es, et qui seront r\u00e9utilis\u00e9es plus tard dans les calculs ou envoy\u00e9es en sortie.</p> <p>Les diagrammes d\u2019activit\u00e9 sont de haut niveau, ce qui signifie qu\u2019ils sont souvent un peu simplifi\u00e9s, ils n\u2019entrent pas dans chaque petit d\u00e9tail. Nous ne nous emb\u00eatons pas \u00e0 d\u00e9finir chaque variable formellement, donc lorsque nous \u00e9crivons <code>entrer largeur</code>, il est sous-entendu qu\u2019une variable nomm\u00e9e <code>largeur</code> sera d\u00e9finie, et sa valeur sera ce qui a \u00e9t\u00e9 entr\u00e9. De m\u00eame, pour <code>afficher aire</code>, nous disons simplement que nous voulons que <code>aire</code> soit affich\u00e9e en sortie, mais nous ne nous emb\u00eatons pas avec les d\u00e9tails d\u2019o\u00f9 et comment <code>aire</code> sera affich\u00e9e. Nous serons un peu plus pr\u00e9cis dans le pseudocode, et beaucoup plus pr\u00e9cis lorsque nous \u00e9crirons un programme pour faire les calculs pour de vrai. \u00c0 ce stade, les diagrammes sont utilis\u00e9s pour avoir une id\u00e9e de ce qui doit \u00eatre fait. Ils deviendront plus compliqu\u00e9s quand nous rencontrerons des algorithmes plus complexes. Avec un peu d\u2019exp\u00e9rience, nous serons en mesure d\u2019\u00e9crire du code directement sans cr\u00e9er d\u2019abord des diagrammes d\u2019activit\u00e9 ou \u00e9crire du pseudocode, mais m\u00eame avec de l\u2019exp\u00e9rience, lorsque nous rencontrons des probl\u00e8mes plus complexes, les diagrammes aident souvent. De nombreux types de diagrammes seront utilis\u00e9s lors de la conception et du d\u00e9veloppement de syst\u00e8mes logiciels, tels que les diagrammes de s\u00e9quences, de cas d\u2019utilisation, d\u2019\u00e9tats, de classes\u2026</p> <p>Les entr\u00e9es et les sorties sont elles-m\u00eames des t\u00e2ches complexes, et d\u00e9pendront exactement de la fa\u00e7on dont nous voulons entrer et sortir (afficher) les valeurs. Nous r\u00e9sumons donc ces t\u00e2ches et nous disons simplement pour l\u2019instant que nous entrons et sortons des valeurs d\u2019une certaine mani\u00e8re. Dans le pseudocode, nous \u00e9crivons ces 2 t\u00e2ches un peu diff\u00e9remment par rapport aux diagrammes : nous utilisons la notation de fonction pour \u00eatre un peu plus pr\u00e9cis. La t\u00e2che d\u2019entrer d\u2019une valeur produit (ou donne ou retourne) une valeur, et nous stockons cette valeur dans une variable, comme dans <code>largeur = entrer()</code>. Nous utilisons les parenth\u00e8ses<code>()</code> pour signifier que nous appelons, ou ex\u00e9cutons, la fonction <code>entrer</code>. La valeur produite est stock\u00e9e dans la variable <code>largeur</code>. Nous disons aussi que la valeur renvoy\u00e9e par la fonction <code>entrer</code> est assign\u00e9e \u00e0 la variable <code>largeur</code>.</p> <p>Pour pouvoir accomplir sa t\u00e2che, la fonction <code>afficher</code> a besoin de savoir quelle valeur afficher, donc nous lui donnons une valeur entre les <code>()</code> lorsque nous l\u2019appelons. Dans notre exemple, nous lui avons donn\u00e9 la variable <code>aire</code>, alors elle affiche la valeur contenue dans la variable <code>aire</code>. <code>afficher</code> ne renvoie aucune valeur, c\u2019est pourquoi nous ne l\u2019assignons \u00e0 rien.</p>"},{"location":"Algorithmes/01_Premiers_Algorithmes/#meilleures-entrees-et-sorties","title":"Meilleures entr\u00e9es et sorties","text":"<p>Un probl\u00e8me lors de l\u2019entr\u00e9e d\u2019une valeur dans l\u2019exemple pr\u00e9c\u00e9dent est que nous ne donnons aucune information \u00e0 l\u2019utilisateur sur ce qui doit \u00eatre entr\u00e9. Dans ce cas, l\u2019utilisateur devinera probablement que la largeur et la hauteur doivent \u00eatre entr\u00e9es pour pouvoir calculer l\u2019aire d\u2019un rectangle, mais laquelle doit \u00eatre entr\u00e9e en premier ? Dans ce cas, cela n\u2019a pas vraiment d\u2019importance, car nous obtiendrons les m\u00eames r\u00e9sultats, mais en g\u00e9n\u00e9ral, l\u2019inversion de 2 entr\u00e9es peut changer consid\u00e9rablement les r\u00e9sultats. Nous avons donc besoin de donner plus d\u2019informations \u00e0 l\u2019utilisateur.</p> <p>Voici 2 versions faisant la m\u00eame chose.</p>"},{"location":"Algorithmes/01_Premiers_Algorithmes/#diagrammes","title":"Diagrammes","text":"Code PlantUML <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:afficher \"Calcul de l'aire d'un rectangle\";\n:afficher \"Entrez la largeur du rectangle :\";\n:entrer largeur;\n:afficher \"Entrez la hauteur du rectangle :\";\n:entrer hauteur;\n:aire = largeur * hauteur;\n:afficher \"l'aire est\";\n:afficher aire;\nstop\n@enduml\n</code></pre> Code PlantUML <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:afficher(\"Calcul de l'aire d'un rectangle\");\n:largeur = entrer(\"Entrez la largeur du rectangle :\");\n:hauteur = entrer(\"Entrez la hauteur du rectangle :\");\n:aire = largeur * hauteur;\n:afficher(\"l'aire est\", aire);\nstop\n@enduml\n</code></pre>"},{"location":"Algorithmes/01_Premiers_Algorithmes/#discussion_1","title":"Discussion","text":"<p>Le premier de ces deux diagrammes est correct, mais il serait g\u00e9n\u00e9ralement consid\u00e9r\u00e9 comme trop verbeux. Nous laisserons de c\u00f4t\u00e9 la sortie suppl\u00e9mentaire pour nous concentrer sur l\u2019algorithme lui-m\u00eame, ou nous utiliserons la deuxi\u00e8me version dans laquelle une nouvelle version de la fonction <code>entrer</code> est utilis\u00e9e directement dans les diagrammes. Cette version de la fonction <code>entrer</code> accepte une cha\u00eene de caract\u00e8res en param\u00e8tre, qui sera affich\u00e9e avant d\u2019attendre qu\u2019une valeur soit entr\u00e9e. Une cha\u00eene de caract\u00e8res, pour la distinguer d\u2019une ou de plusieurs variables, est donn\u00e9e entre guillemets doubles <code>\"\"</code>.</p> <p>La fonction <code>afficher</code> est \u00e9galement utilis\u00e9e diff\u00e9remment. On lui donne 2 choses \u00e0 afficher, une cha\u00eene et une variable contenant les r\u00e9sultats. Elle les affichera l\u2019une apr\u00e8s l\u2019autre.</p> <p>Nous aurons besoin de messages de sortie plus complets lors de l\u2019\u00e9criture du code, et nous les inclurons souvent lors de l\u2019\u00e9criture du pseudocode, mais pas lors de la cr\u00e9ation de diagrammes d\u2019activit\u00e9 pour les garder plus petits et nous aider \u00e0 nous concentrer sur l\u2019algorithme lui-m\u00eame, et non sur les d\u00e9tails des entr\u00e9es et des sorties, \u00e0 moins que l\u2019algorithme devait traiter les entr\u00e9es et les sorties d\u2019une mani\u00e8re tr\u00e8s sp\u00e9cifique.</p>"},{"location":"Algorithmes/01_Premiers_Algorithmes/#pseudocode_1","title":"Pseudocode","text":"<pre><code>afficher(\"Calcul de l'aire d'un rectangle\")\nlargeur = entrer(\"Entrez la largeur du rectangle :\")\nhauteur = entrer(\"Entrez la hauteur du rectangle :\")\naire = largeur * hauteur\nafficher(\"l'aire est\", aire)\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/","title":"Les conditionnelles","text":""},{"location":"Algorithmes/02_Conditionnelles/#prendre-des-decisions","title":"Prendre des d\u00e9cisions","text":"<p>Les algorithmes qui ne font que prendre des entr\u00e9es, calculer des valeurs \u00e0 l\u2019aide de formules et produire des r\u00e9sultats, ne sont pas tr\u00e8s int\u00e9ressants, ou du moins, ils deviendront rapidement redondants. Nous  avons besoin d\u2019autres concepts de programmation pour permettre de supporter des algorithmes diff\u00e9rents et plus complexes.</p> <p>Un concept utile est la conditionnelle, utilis\u00e9e pour faire des choix pendant l\u2019ex\u00e9cution d\u2019un algorithme. On l\u2019appelle parfois une branche, car lorsque nous ex\u00e9cutons un algorithme, nous pouvons nous diriger vers l\u2019une des nombreuses branches en fonction de certaines conditions. Pour commencer, nous examinerons des exemples avec seulement 2 cas possibles, avec une condition qui est soit <code>vrai</code> soit <code>faux</code>.</p> <p>Commen\u00e7ons par un exemple pour donner l\u2019id\u00e9e g\u00e9n\u00e9rale avec un algorithme simple. Des exemples plus complexes suivront.</p>"},{"location":"Algorithmes/02_Conditionnelles/#trouver-le-plus-petit-de-2-nombres","title":"Trouver le plus petit de 2 nombres","text":"<ul> <li>Entr\u00e9es : 2 nombres</li> <li>Sortie : le plus petit nombre des deux</li> </ul>"},{"location":"Algorithmes/02_Conditionnelles/#diagrammes","title":"Diagrammes","text":""},{"location":"Algorithmes/02_Conditionnelles/#version-1-condition-a-lexterieur-du-losange","title":"Version 1 : condition \u00e0 l\u2019ext\u00e9rieur du losange","text":"Code PlantUML <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:entrer premier;\n:entrer deuxi\u00e8me;\nfloating note right\n    le losange est un embranchement\n    (ou une conditionnelle)\nend note \nif () then (premier &lt; deuxi\u00e8me ?)\n    :afficher premier;\n    note left\n        si la condition est\n        vraie, faire ceci\n    end note\nelse (sinon) \n    :afficher deuxi\u00e8me;\n    note right\n        sinon, si la condition est\n        fausse, faire ceci\n    end note\nendif\nstop\n@enduml\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/#version-2-condition-a-linterieur-du-losange","title":"Version 2 : condition \u00e0 l\u2019int\u00e9rieur du losange","text":"<p>Le losange est \u201c\u00e9tir\u00e9\u201d horizontalement pour faire de la place \u00e0 la condition, donc le losange n\u2019est d\u00e9sormais plus un losange, il devient un hexagone.</p> <p></p> Code PlantUML <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:entrer premier;\n:entrer deuxi\u00e8me;\nfloating note right\n    on peut \u00e9galement mettre la condition \n    dans le noeud d'embranchement\nend note \nif (premier &lt; deuxi\u00e8me ?) then (oui)\n    :afficher premier;\nelse (non)\n    :afficher deuxi\u00e8me;\nendif\nstop\n@enduml\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/#discussion","title":"Discussion","text":"<p>Seule l\u2019une des deux branches de la conditionnelle sera ex\u00e9cut\u00e9e. Si la condition est vraie, ce qui signifie que le premier nombre est plus petit que l\u2019autre, alors le premier nombre sera affich\u00e9. Si la condition est fausse, alors la seconde branche \u00e0 droite sera ex\u00e9cut\u00e9e, et le deuxi\u00e8me nombre sera affich\u00e9, ce qui signifie que le deuxi\u00e8me nombre n\u2019est pas plus petit que le premier. Mais cela ne signifie pas que le second nombre est plus grand que le premier. Si les deux nombres sont \u00e9gaux, alors la condition est fausse, donc la branche non sera ex\u00e9cut\u00e9e. Les exemples suivants montreront comment traiter l\u2019\u00e9galit\u00e9 entre les deux nombres dans un cas sp\u00e9cifique, donnant ainsi 3 possibilit\u00e9s, ou en d\u2019autres termes, donnant 3 options, ou 3 branches.</p> <p>Notez qu\u2019apr\u00e8s une condition, les deux (ou plus) branches doivent normalement se rejoindre en un losange pour continuer l\u2019algorithme. Dans cet exemple, l\u2019algorithme se termine apr\u00e8s la conditionnelle.</p>"},{"location":"Algorithmes/02_Conditionnelles/#pseudocode","title":"Pseudocode","text":"<pre><code>premier = entrer()\ndeuxi\u00e8me = entrer()\nsi (premier &lt; deuxi\u00e8me)\n    afficher(premier)\nelse\n    afficher(deuxi\u00e8me)\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/#trouver-le-plus-petit-de-2-nombres-version-2","title":"Trouver le plus petit de 2 nombres, version 2","text":"<p>Afficher la r\u00e9ponse sous forme de texte \u00e0 la place de la valeur du plus petit nombre.</p> <ul> <li>Entr\u00e9es : 2 nombres</li> <li>Sortie : un message disant que soit le premier nombre ou le deuxi\u00e8me nombre   est le plus petit des 2 nombres</li> </ul>"},{"location":"Algorithmes/02_Conditionnelles/#diagramme","title":"Diagramme","text":"Code PlantUML <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:entrer premier;\n:entrer deuxi\u00e8me;\nif (premier &lt; deuxi\u00e8me?) then (oui)\n    :afficher \"Le premier nombre est le plus petit\";\nelse (non)\n    :afficher \"Le deuxi\u00e8me nombre est le plus petit\";\nendif\nstop\n@enduml\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/#discussion_1","title":"Discussion","text":"<p>Cet exemple n\u2019est pas tout \u00e0 fait correct, car si le deuxi\u00e8me nombre n\u2019est pas plus grand que le premier, cela ne signifie pas automatiquement que le deuxi\u00e8me nombre est le plus petit des 2 : ils pourraient \u00eatre \u00e9gaux. Lors de l\u2019affichage de la valeur du plus petit nombre, cela n\u2019a pas d\u2019importance, nous obtiendrons le bon r\u00e9sultat, mais lors de l\u2019affichage d\u2019un message texte, cela ne sera pas correct dans le cas sp\u00e9cifique o\u00f9 les 2 valeurs sont \u00e9gales. Le prochain exemple utilise une conditionnelle \u00e0 l\u2019int\u00e9rieur d\u2019une autre conditionnelle pour distinguer les 3 cas.</p>"},{"location":"Algorithmes/02_Conditionnelles/#trouver-le-plus-petit-de-2-nombres-version-3","title":"Trouver le plus petit de 2 nombres, version 3","text":"<ul> <li>Entr\u00e9es : 2 nombres</li> <li>Sortie : un message disant que soit le premier nombre ou le deuxi\u00e8me nombre   est le plus petit des 2 nombres, ou un message qui dit que les 2 nombres sont   \u00e9gaux</li> </ul>"},{"location":"Algorithmes/02_Conditionnelles/#diagramme_1","title":"Diagramme","text":"Code PlantUML <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:entrer premier;\n:entrer deuxi\u00e8me;\nif () then (premier &lt; deuxi\u00e8me ?)\n    :afficher \"Le premier nombre est le plus petit\";\nelse  (sinon)\n    if () then (premier &gt; deuxi\u00e8me ?)\n        :afficher \"Le deuxi\u00e8me nombre est le plus petit\";\n    else (sinon)\n        :afficher \"Les deux nombres sont \u00e9gaux\";\n    endif\nendif\nstop\n@enduml\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/#discussion_2","title":"Discussion","text":"<p>Lorsque nous avons 3 cas (ou branches) ou plus, une seule conditionnelle ne suffira pas, car elle ne distingue que 2 cas, la partie vraie et la partie fausse de la condition. Nous d\u00e9terminons d\u2019abord si le premier nombre est plus petit que le second, puis si oui, nous proc\u00e9dons comme avant. Si le premier nombre n\u2019est pas plus petit que le second, alors nous avons 2 autres cas : le second nombre est plus petit, ou les 2 nombres sont \u00e9gaux. Nous avons donc besoin d\u2019une autre conditionnelle pour distinguer ces 2 cas.</p>"},{"location":"Algorithmes/02_Conditionnelles/#mise-en-page-alternative-du-diagramme","title":"Mise en page alternative du diagramme","text":"<p>Ce diagramme repr\u00e9sente exactement le m\u00eame algorithme, mais les noeuds sont agenc\u00e9s diff\u00e9remment.</p> <p></p> Code PlantUML <pre><code>@startuml\nskinparam defaultFontSize 16\n!pragma useVerticalIf on\n:entrer premier;\n:entrer deuxi\u00e8me;\nif (premier &lt; deuxi\u00e8me ?) then (oui)\n    :afficher \"Le premier nombre est le plus petit\";\n(non) else if (premier &gt; deuxi\u00e8me ?) then (oui)\n    :afficher \"Le deuxi\u00e8me nombre est le plus petit\";\nelse (non)\n    :afficher \"Les deux nombres sont \u00e9gaux\";\nendif\nstop\n@enduml\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/#pseudocode_1","title":"Pseudocode","text":""},{"location":"Algorithmes/02_Conditionnelles/#version-1","title":"Version 1","text":"<pre><code>premier = lire(\"Entrez le premier nombre: \")\ndeuxi\u00e8me = lire(\"Entrez le deuxi\u00e8me nombre: \")\nsi premier &lt; deuxi\u00e8me\n    afficher(premier)\nsinon\n    afficher(deuxi\u00e8me)\nfin si\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/#version-2","title":"Version 2","text":"<pre><code>premier = lire(\"Entrez le premier nombre: \")\ndeuxi\u00e8me = lire(\"Entrez le deuxi\u00e8me nombre: \")\nsi premier &lt; deuxi\u00e8me\n    afficher(\"Le premier nombre est le plus petit\")\nsinon\n    afficher(\"Le deuxi\u00e8me nombre est le plus petit\")\nfin si\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/#version-3","title":"Version 3","text":"<pre><code>premier = lire(\"Entrez le premier nombre: \")\ndeuxi\u00e8me = lire(\"Entrez le deuxi\u00e8me nombre: \")\nsi premier &lt; deuxi\u00e8me\n    afficher(\"Le premier nombre est le plus petit\")\nsinon\n    si premier &gt; deuxi\u00e8me :\n        afficher(\"Le deuxi\u00e8me nombre est le plus petit\")\n    sinon :\n        afficher(\"Les deux nombres sont \u00e9gaux\")\n    fin si\nfin si\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/#utiliser-un-commutateur-a-la-place-dune-sequence-de-conditions","title":"Utiliser un commutateur \u00e0 la place d\u2019une s\u00e9quence de conditions","text":"<p>Il est souvent pr\u00e9f\u00e9rable d\u2019utiliser un commutateur (ou <code>switch</code> en anglais) pour remplacer les conditionnelles, surtout lorsqu\u2019il y a beaucoup de cas d\u00e9termin\u00e9s par de nombreuses conditions. Cela rend l\u2019algorithme beaucoup plus facile \u00e0 suivre. Malheureusement, ce ne sont pas tous les langages de programmation qui supportent les commutateurs, et certains langages de programmation ne supportent que certains types sp\u00e9cifiques de commutateurs.</p> <p>L\u2019exemple suivant utilise un commutateur pour remplacer les conditionnelles pour r\u00e9soudre le m\u00eame probl\u00e8me que l\u2019exemple pr\u00e9c\u00e9dent. Il est suivi par un autre exemple avec plus de cas (ou branches), en utilisant un <code>switch</code> d\u2019une mani\u00e8re l\u00e9g\u00e8rement diff\u00e9rente.</p>"},{"location":"Algorithmes/02_Conditionnelles/#le-plus-petit-de-2-nombres-avec-un-switch","title":"Le plus petit de 2 nombres avec un <code>switch</code>","text":""},{"location":"Algorithmes/02_Conditionnelles/#diagramme_2","title":"Diagramme","text":"Code PlantUML <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:entrer premier;\n:entrer deuxi\u00e8me;\nswitch (?) \ncase (premier &lt; deuxi\u00e8me ?)\n    :afficher \"Le premier nombre est le plus petit\";\ncase (       premier &gt; deuxi\u00e8me ?)\n     :afficher \"Le deuxi\u00e8me nombre est le plus petit\";\ncase (premier = deuxi\u00e8me)\n     :afficher \"Les deux nombres sont \u00e9gaux\";\nendswitch\nstop\n@enduml\n</code></pre>"},{"location":"Algorithmes/02_Conditionnelles/#discussion_3","title":"Discussion","text":"<p>Nous avons un seul losange avec un point d\u2019interrogation pour repr\u00e9senter le switch, puis nous avons des fl\u00e8ches \u00e9tiquet\u00e9es avec les diff\u00e9rentes conditions. L\u2019algorithme suivra la fl\u00e8che dont la condition \u00e9value \u00e0 vrai. Il ne devrait y avoir qu\u2019une seule condition qui est vraie \u00e0 tout moment, pour \u00e9viter la confusion quant \u00e0 la fl\u00e8che qui doit \u00eatre suivie. Il peut y avoir un cas sp\u00e9cial suppl\u00e9mentaire \u00e9tiquet\u00e9 <code>d\u00e9faut</code>, qui sera utilis\u00e9 si tous les autres cas sont faux. Dans l\u2019exemple ci-dessus, il n\u2019est pas n\u00e9cessaire d\u2019avoir un cas d\u00e9faut, car nos conditions couvrent tous les cas. Mais ici, on pourrait remplacer le dernier cas qui v\u00e9rifie l\u2019\u00e9galit\u00e9 entre les deux nombres par un cas d\u00e9faut, pour obtenir un r\u00e9sultat \u00e9quivalent.</p> <p>Note : ici, comme nous l\u2019avons fait dans les autres exemples, nous supposons que les valeurs d\u2019entr\u00e9e sont du bon type, dans ce cas des nombres, pour que les algorithmes fonctionnent correctement. En g\u00e9n\u00e9ral, nous devrions nous assurer que les valeurs sont du bon type. Une discussion sur les types de donn\u00e9es et comment valider l\u2019entr\u00e9e fera partie d\u2019un autre chapitre.</p>"},{"location":"Algorithmes/03_Boucles/","title":"Les boucles","text":""},{"location":"Algorithmes/03_Boucles/#boucles-sans-compteurs","title":"Boucles sans compteurs","text":"<p>Les boucles sans compteurs sont bas\u00e9es seulement sur une condition, et ne comptent pas le nombre de fois que la boucle est r\u00e9p\u00e9t\u00e9e. Pas opposition, les boucles avec compteurs comptent le nombre de r\u00e9p\u00e9titions de la boucle, et la d\u00e9cision de r\u00e9p\u00e9ter la boucle ou non est bas\u00e9e sur le nombre de r\u00e9p\u00e9titions conserv\u00e9 dans le compteur.</p>"},{"location":"Algorithmes/03_Boucles/#boucle-repeter-jusqua","title":"Boucle <code>r\u00e9p\u00e9ter ... jusqu'\u00e0</code>","text":"<p>En anglais : <code>repeat ... until</code>.</p> <p>On place une conditionnelle \u00e0 la fin de ce qui doit \u00eatre r\u00e9p\u00e9t\u00e9 (\u00e0 la fin de la boucle). La boucle arr\u00eate quand la condition du <code>jusqu'\u00e0</code> est vraie, et la boucle continue si la condition est fausse.</p> <p>Donc le retour arri\u00e8re vers le d\u00e9but de la boucle s\u2019effectue quand la condition est fausse. Quand la condition est vraie, on sort de la boucle.</p> <p></p> PlantUML code <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:faire quelque chose avant la boucle;\nrepeat\n    :faire quelque chose \u00e0 l'int\u00e9rieur de la boucle;\nrepeat while (condition ?) is (faux) not (vrai)\n:faire quelque chose apr\u00e8s la boucle;\nstop\n@enduml\n</code></pre> <pre><code>// faire quelque chose avant la boucle\nr\u00e9p\u00e9ter\n    // faire quelque chose \u00e0 l'int\u00e9rieur de la boucle\njusqu'\u00e0 condition\n// faire quelque chose apr\u00e8s la boucle\n</code></pre>"},{"location":"Algorithmes/03_Boucles/#boucle-faire-tant-que","title":"Boucle <code>faire ... tant que</code>","text":"<p>En anglais : <code>do ... while</code>.</p> <p>On place une conditionnelle \u00e0 la fin de ce qui doit \u00eatre r\u00e9p\u00e9t\u00e9 (\u00e0 la fin de la boucle). La boucle arr\u00eate quand la condition du <code>while</code> est fausse, et la boucle continue si la condition est vraie.</p> <p>Donc le retour arri\u00e8re vers le d\u00e9but de la boucle s\u2019effectue quand la condition est vraie. Quand la condition est fausse, on sort de la boucle.</p> <p></p> PlantUML code <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:faire quelque chose avant la boucle;\nrepeat\n    :faire quelque chose \u00e0 l'int\u00e9rieur de la boucle;\nrepeat while (condition ?) is (vrai) not (faux)\n:faire quelque chose apr\u00e8s la boucle;\nstop\n@enduml\n</code></pre> <pre><code>// faire quelque chose avant la boucle\nfaire\n    // faire quelque chose \u00e0 l'int\u00e9rieur de la boucle\ntantque condition\n// faire quelque chose apr\u00e8s la boucle\n</code></pre>"},{"location":"Algorithmes/03_Boucles/#boucle-tant-que","title":"Boucle <code>tant que</code>","text":"<p>En anglais : <code>while</code>.</p> <p>La boucle <code>tant que</code> est diff\u00e9rente des 2 autres parce que la condition est plac\u00e9e au d\u00e9but de la boucle, et par cons\u00e9quent, la condition de boucle est \u00e9valu\u00e9e avant de faire quoi que se soit dans le corps la boucle. Le corps d\u2019une boucle <code>tant que</code> peut ne jamais \u00eatre ex\u00e9cut\u00e9e, mais le corps des boucles <code>faire ... tant que</code> et <code>r\u00e9p\u00e9ter ... jusqu'\u00e0</code> sont toujours ex\u00e9cut\u00e9s au moins une fois.</p> <p>Mais comme la boucle <code>faire ... tant que</code>, la boucle continue si la condition est vraie et arr\u00eate lorsque la condition est fausse. La diff\u00e9rence est qu\u2019\u00e0 la fin du corps de la boucle, on retournera automatiquement au d\u00e9but pour \u00e9valuer la condition \u00e0 nouveau et alors, on d\u00e9cidera si on continue ou non. Sinon, on doit sauter \u00e0 la premi\u00e8re instruction apr\u00e8s la boucle.</p> <p></p> PlantUML code <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:faire quelque chose avant la boucle;\nwhile (condition ?) is (vrai)\n    :faire quelque chose \u00e0 l'int\u00e9rieur de la boucle;\nendwhile (faux)\n:faire quelque chose apr\u00e8s la boucle;\nstop\n@enduml\n</code></pre> <pre><code>// faire quelque chose avant la boucle\ntantque condition :\n    // faire quelque chose \u00e0 l'int\u00e9rieur de la boucle\nfintantque\n// faire quelque chose apr\u00e8s la boucle\n</code></pre>"},{"location":"Algorithmes/03_Boucles/#boucles-avec-compteurs","title":"Boucles avec compteurs","text":"<p>On ajoute une variable, le compteur, qui commence avec la valeur 0 ou 1, et la condition de la boucle est bas\u00e9e sur ce compteur. Le compteur est souvent nomm\u00e9 <code>i</code> ou <code>j</code> ou <code>k</code> \u2026, comme dans la notation math\u00e9matique pour les sommations :</p> \\[\\sum_{i=1}^{n}i^2\\ \\ \\ .\\] <p>On utilise souvent aussi les variables avec des noms plus pr\u00e9cis, comme par exemple <code>nbEssais</code> (<code>nTries</code>) ou <code>compteur</code> (<code>count</code>).</p> <p>Il n\u2019y a pas de notation sp\u00e9ciale pour ce type de boucle dans les diagrammes, mais en pseudocode et dans la plupart des langages de programmation, il y a diff\u00e9rentes formes de boucles <code>pour</code> (<code>for</code>).</p> <p>Dans les diagrammes, on utilise normalement des boucles <code>tant que</code>, et dans le pseudocode et dans les diff\u00e9rents langages de programmation, on peut aussi utiliser les boucles <code>tant que</code>, mais on utilisera normalement les boucles <code>pour</code> lorsque possible. Les boucles <code>pour</code> sont, dans la plupart des langages, une forme compacte des boucles <code>tant que</code> avec compteurs.</p> <p></p> PlantUML code <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:faire quelque chose avant la boucle;\n:compteur = 1;\n:nbR\u00e9p\u00e9titions = 5;\nwhile (compteur &lt;= nbR\u00e9p\u00e9titions ?) is (oui)\n    :faire quelque chose \u00e0 l'int\u00e9rieur de la boucle;\n    :compteur = compteur + 1;\nendwhile (non)\n:faire quelque chose apr\u00e8s la boucle;\nstop\n@enduml\n</code></pre> <p>Dans la plupart des langages de programmation, il existe un op\u00e9rateur sp\u00e9cial pour incr\u00e9menter un entier, ce qui signifie qu\u2019il va ajouter 1 \u00e0 la valeur actuelle d\u2019un nombre entier. \u00c9crire <code>compteur++</code> est \u00e9quivalent \u00e0 \u00e9crire <code>compteur = compteur + 1</code>. Il est \u00e9galement possible de commencer avec <code>count = 0</code> au lieu de commencer avec 1. Pour faire le m\u00eame nombre d\u2019it\u00e9rations \u00e0 travers la boucle, nous devons changer la condition de la boucle pour utiliser <code>&lt;</code> au lieu de <code>&lt;=</code>.</p> <p></p> PlantUML code <pre><code>@startuml\nskinparam defaultFontSize 16\nstart\n:faire quelque chose avant la boucle;\n:compteur = 0;\n:nbR\u00e9p\u00e9titions = 5;\nwhile (compteur &lt; nbR\u00e9p\u00e9titions ?) is (oui)\n    :faire quelque chose \u00e0 l'int\u00e9rieur de la boucle;\n    :compteur++;\nendwhile (non)\n:faire quelque chose apr\u00e8s la boucle;\nstop\n@enduml\n</code></pre>"},{"location":"Algorithmes/03_Boucles/#pseudocode-avec-boucle-tant-que","title":"Pseudocode avec boucle <code>tant que</code>","text":"<pre><code>// faire quelque chose avant la boucle\ncompteur = 1\nnbR\u00e9p\u00e9titions = 5\ntantque compteur &lt;= nbR\u00e9p\u00e9titions :\n    // faire quelque chose \u00e0 l'int\u00e9rieur de la boucle\n    compteur = compteur + 1\nfintantque\n// faire quelque chose apr\u00e8s la boucle\n</code></pre> <pre><code>// faire quelque chose avant la boucle\ncompteur = 0\nnbR\u00e9p\u00e9titions = 5\ntantque compteur &lt; nbR\u00e9p\u00e9titions :\n    // faire quelque chose \u00e0 l'int\u00e9rieur de la boucle\n    compteur++\nfintantque\n// faire quelque chose apr\u00e8s la boucle\n</code></pre>"},{"location":"Algorithmes/03_Boucles/#pseudocode-avec-boucle-pour","title":"Pseudocode avec boucle <code>pour</code>","text":""},{"location":"Algorithmes/03_Boucles/#boucle-pour-de-style-algol","title":"Boucle <code>pour</code> de style Algol","text":"<pre><code>// faire quelque chose avant la boucle\nnbR\u00e9p\u00e9titions = 5\npour compteur de 0 \u00e0 nbR\u00e9p\u00e9titions :\n    // faire quelque chose \u00e0 l'int\u00e9rieur de la boucle\nfinpour\n// faire quelque chose apr\u00e8s la boucle\n</code></pre> <ul> <li>La valeur de d\u00e9part du compteur est 0.</li> <li>Il va y avoir une r\u00e9p\u00e9tition (ou it\u00e9ration) de la boucle pour chaque   valeur de 0 jusqu\u2019\u00e0 <code>nbR\u00e9p\u00e9titions</code>.<ul> <li>selon le langage de programmation utilis\u00e9, l\u2019intervalle de valeurs peut   \u00eatre inclusif ou exclusif par rapport \u00e0 la limite sup\u00e9rieure :<ul> <li>si inclusif, alors le nombre d\u2019it\u00e9rations dans la boucle donn\u00e9e plus   haut sera 6 parce qu\u2019il y aura une it\u00e9ration pour toutes les valeurs   enti\u00e8res de 0 \u00e0 5 inclusivement<ul> <li>dans ce cas, il serait probablement pr\u00e9f\u00e9rable d\u2019initialiser le   compteur \u00e0 1 au lieu de 0.</li> </ul> </li> <li>si exclusif, alors le nombre d\u2019it\u00e9rations dans la boucle donn\u00e9e plus   haut sera 5 parce que la boucle s\u2019arr\u00eatera lorsque <code>compteur == 5</code>,   donc il aura seulement des it\u00e9rations pour les valeurs de <code>compteur</code>   de 0, 1, 2, 3, et 4.</li> </ul> </li> <li>La limite inf\u00e9rieure (la valeur de d\u00e9part) est toujours inclusive.</li> <li>Nous utiliserons la convention que l\u2019intervalle est exclusif,   comme dans le langage de programmation Python.</li> </ul> </li> </ul>"},{"location":"Algorithmes/03_Boucles/#boucle-pour-de-style-c","title":"Boucle <code>pour</code> de style C","text":"<pre><code>// faire quelque chose avant la boucle\nnbR\u00e9p\u00e9titions = 5\npour (compteur = 0; compteur &lt; nbR\u00e9p\u00e9titions; compteur++) :\n    // faire quelque chose \u00e0 l'int\u00e9rieur de la boucle\nfinpour\n// faire quelque chose apr\u00e8s la boucle\n</code></pre> <ul> <li><code>compteur = 0</code> : s\u2019ex\u00e9cute une seule fois, juste avant l\u2019\u00e9valuation de la   condition de la boucle</li> <li><code>compteur &lt; nbR\u00e9p\u00e9titions</code> : la condition s\u2019ex\u00e9cute \u00e0 r\u00e9p\u00e9tition (ou pour   chaque it\u00e9ration) de la boucle, avant le corps de la boucle<ul> <li>comme pour une boucle <code>tant que</code>, si la condition est vraie, alors le   corps de la boucle est ex\u00e9cut\u00e9e</li> <li>sinon (si la condition est fausse), alors la boucle est termin\u00e9e et   l\u2019ex\u00e9cution continue avec les instructions suivant la boucle</li> </ul> </li> <li><code>nbR\u00e9p\u00e9titions++</code> : mise \u00e0 jour du compteur, qui s\u2019ex\u00e9cute \u00e0 la fin du   corps de la boucle, juste avant de revenir au d\u00e9but de la boucle pour   r\u00e9\u00e9valuer la condition</li> </ul>"},{"location":"Algorithmes/03_Boucles/#boucles-pour-chaque","title":"Boucles <code>pour chaque</code>","text":"<p>En anglais : <code>for each</code>.</p> <p>Les boucles <code>pour chaque</code> sont diff\u00e9rentes des autres boucles parce qu\u2019elles n\u00e9cessitent normalement l\u2019utilisation de collections de valeurs ou d\u2019objets, et d\u2019it\u00e9rateurs. Les collections, comme les tableaux et les listes, contiennent plusieurs valeurs ou objets, et les it\u00e9rateurs permettent de parcourir toutes les valeurs ou objets d\u2019une collection sous forme de s\u00e9quence.</p> <p>Les collections, les it\u00e9rateurs et les boucles <code>pour chaque</code> seront pr\u00e9sent\u00e9s de fa\u00e7on plus d\u00e9taill\u00e9e plus tard. Pour l\u2019instant, seulement une id\u00e9e g\u00e9n\u00e9rale du concept est pr\u00e9sent\u00e9e. Il est difficile de bien repr\u00e9senter les boucles <code>pour chaque</code> dans des diagrammes, donc les exemples seront uniquement sous forme de pseudocode.</p>"},{"location":"Algorithmes/03_Boucles/#boucle-pour-chaque-avec-intervalle","title":"Boucle <code>pour chaque</code> avec intervalle","text":"<pre><code>// faire quelque chose avant la boucle\nnbR\u00e9p\u00e9titions = 5\npour chaque i dans intervalle(0, nbR\u00e9p\u00e9titions) : \n    // faire quelque chose \u00e0 l'int\u00e9rieur de la boucle\nfinpour\n// faire quelque chose apr\u00e8s la boucle\n</code></pre> <ul> <li>La fonction <code>intervalle(0, nbR\u00e9p\u00e9titions)</code> va cr\u00e9er une liste de nombres   entiers dans l\u2019intervalle <code>[0, nbR\u00e9p\u00e9titions)</code> :<ul> <li>les crochets <code>[</code> et <code>]</code> veulent dire inclusif</li> <li>les parenth\u00e8ses <code>(</code> et <code>)</code> veulent dire exclusif</li> <li>donc les nombres dans la liste vont \u00eatre 0, 1, 2, 3 et 4.</li> </ul> </li> <li>\u00c0 la premi\u00e8re it\u00e9ration, <code>i</code> va \u00eatre 0</li> <li>\u00c0 la deuxi\u00e8me it\u00e9ration, <code>i</code> va \u00eatre 1</li> <li>\u00c0 la troisi\u00e8me it\u00e9ration, <code>i</code> va \u00eatre 2</li> <li>\u00c0 la quatri\u00e8me it\u00e9ration, <code>i</code> va \u00eatre 3</li> <li>\u00c0 la cinqui\u00e8me et derni\u00e8re it\u00e9ration, <code>i</code> va \u00eatre 4</li> </ul>"},{"location":"Algorithmes/03_Boucles/#boucle-pour-chaque-avec-liste-ou-tableau","title":"Boucle <code>pour chaque</code> avec liste ou tableau","text":"<pre><code>// faire quelque chose avant la boucle\nnombres = [5, 1, 8, 3]\npour chaque i dans nombres : \n    // faire quelque chose \u00e0 l'int\u00e9rieur de la boucle\nfinpour\n// faire quelque chose apr\u00e8s la boucle\n</code></pre> <ul> <li>\u00c0 la premi\u00e8re it\u00e9ration, <code>i</code> va \u00eatre 5</li> <li>\u00c0 la deuxi\u00e8me it\u00e9ration, <code>i</code> va \u00eatre 1</li> <li>\u00c0 la troisi\u00e8me it\u00e9ration, <code>i</code> va \u00eatre 8</li> <li>\u00c0 la quatri\u00e8me et derni\u00e8re it\u00e9ration, <code>i</code> va \u00eatre 3</li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Cours/01-22-janvier/","title":"1. Cours du 22 janvier 2025","text":""},{"location":"R%C3%A9sum%C3%A9/Cours/01-22-janvier/#sujets","title":"Sujets","text":"<ol> <li>Plan de cours</li> <li>Qu\u2019est-ce qu\u2019un algorithme</li> <li>Utilisation de PyCharm</li> <li>Premier programme en Python</li> <li>Variables et arithm\u00e9tique</li> <li>Fonction <code>print</code></li> <li>Fonction <code>type</code></li> </ol>"},{"location":"R%C3%A9sum%C3%A9/Cours/02-29-janvier/","title":"2. Cours du 29 janvier 2025","text":""},{"location":"R%C3%A9sum%C3%A9/Cours/02-29-janvier/#sujets","title":"Sujets","text":"<ol> <li>Retour sur la fonction <code>print</code><ul> <li>utilisation de <code>sep=</code> et <code>end=</code></li> </ul> </li> <li>Les f-strings</li> <li>La fonction <code>input</code></li> <li>La fonction <code>int</code></li> <li>La fonction <code>float</code></li> <li>La fonction <code>round</code></li> </ol>"},{"location":"R%C3%A9sum%C3%A9/Cours/03-05-f%C3%A9vrier/","title":"3. Cours du 5 f\u00e9vrier 2025","text":""},{"location":"R%C3%A9sum%C3%A9/Cours/03-05-f%C3%A9vrier/#sujets","title":"Sujets","text":"<ol> <li>Importer des modules<ul> <li><code>import</code></li> </ul> </li> <li>Module <code>random</code></li> <li>Module <code>numpy</code></li> <li>Module <code>pyplot</code></li> </ol>"},{"location":"R%C3%A9sum%C3%A9/Cours/04-12-f%C3%A9vrier/","title":"4. Cours du 12 f\u00e9vrier 2025","text":""},{"location":"R%C3%A9sum%C3%A9/Cours/04-12-f%C3%A9vrier/#sujets","title":"Sujets","text":"<ol> <li>D\u00e9finition de fonction</li> </ol>"},{"location":"R%C3%A9sum%C3%A9/Cours/05-19-f%C3%A9vrier/","title":"5. Cours du 19 f\u00e9vrier 2025","text":""},{"location":"R%C3%A9sum%C3%A9/Cours/05-19-f%C3%A9vrier/#sujets","title":"Sujets","text":"<ol> <li>Conditionnelles</li> </ol>"},{"location":"R%C3%A9sum%C3%A9/Cours/06-26-f%C3%A9vrier/","title":"6. Cours du 26 f\u00e9vrier 2025","text":""},{"location":"R%C3%A9sum%C3%A9/Cours/06-26-f%C3%A9vrier/#premier-examen","title":"Premier examen","text":""},{"location":"R%C3%A9sum%C3%A9/Cours/06-26-f%C3%A9vrier/#deroulement-de-lexamen","title":"D\u00e9roulement de l\u2019examen","text":"<p>\u00c0 venir</p>"},{"location":"R%C3%A9sum%C3%A9/Cours/06-26-f%C3%A9vrier/#regles-a-suivre","title":"R\u00e8gles \u00e0 suivre","text":"<p>\u00c0 venir</p>"},{"location":"R%C3%A9sum%C3%A9/Cours/06-26-f%C3%A9vrier/#preparation","title":"Pr\u00e9paration","text":"<p>\u00c0 venir</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/","title":"1. Affichage sur la sortie standard","text":""},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#la-sortie-standard","title":"La sortie standard","text":"<p>La sortie standard (<code>stdout</code>) est le flux de sortie par d\u00e9faut d\u2019un programme informatique[1][3]. C\u2019est le canal par lequel un programme affiche sa sortie normale \u00e0 l\u2019utilisateur ou \u00e0 un autre programme[1].</p> <p>Voici les principales caract\u00e9ristiques de stdout :</p> <ol> <li>Il s\u2019agit d\u2019un flux de donn\u00e9es connect\u00e9 par d\u00e9faut au terminal ou \u00e0 la console o\u00f9 le programme a \u00e9t\u00e9 lanc\u00e9[1][3].</li> <li>Son descripteur de fichier est 1[3].</li> <li>Il est utilis\u00e9 pour afficher les r\u00e9sultats normaux, les messages d\u2019information et les donn\u00e9es produites par le    programme[1][5].</li> <li>En langage C, stdout est repr\u00e9sent\u00e9 par le pointeur FILE* stdout d\u00e9fini dans [3]. <li>Il peut \u00eatre redirig\u00e9 vers un fichier ou un autre programme, permettant ainsi de capturer ou de traiter la sortie du    programme[3][5].</li> <li>Par convention, stdout est utilis\u00e9 pour la sortie normale, tandis que stderr (descripteur 2) est utilis\u00e9 pour les    messages d\u2019erreur et de diagnostic[1][10].</li> <p>La sortie standard permet aux programmes de communiquer leurs r\u00e9sultats de mani\u00e8re standardis\u00e9e, facilitant ainsi leur utilisation dans des scripts ou leur int\u00e9gration avec d\u2019autres outils[5].</p> Citations <ul> <li>[1] https://www.lenovo.com/fr/fr/glossary/stdout/</li> <li>[2] https://www.ukonline.be/cours/java/apprendre-java/chapitre4-9</li> <li>[3] https://fr.wikipedia.org/wiki/Flux_standard</li> <li>[4] https://fr.wikibooks.org/wiki/Programmation_C/Entr%C3%A9es/sorties</li> <li>[5] https://python.developpez.com/cours/DiveIntoPython/php/frdiveintopython/scripts_and_streams/stdin_stdout_stderr.php</li> <li>[6] https://canada.lenovo.com/fr/ca/en/glossary/stdin/</li> <li>[7] https://learn.microsoft.com/fr-fr/cpp/c-runtime-library/stdin-stdout-stderr?view=msvc-170</li> <li>[8] http://www.iro.umontreal.ca/~dift1166/A08/notesDeCours/intro_es.pdf</li> <li>[9] https://librecours.net/modules/picasoft/init/linux-ligne-commande-api/solweb/co/flux.html</li> <li>[10] https://www.reddit.com/r/bash/comments/w522np/understanding_stdin_stdout_and_stderr/?tl=fr</li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#la-fonction-print","title":"La fonction <code>print()</code>","text":"<p>La fonction <code>print()</code> est utilis\u00e9e pour afficher du texte ou des r\u00e9sultats \u00e0 l\u2019\u00e9cran. Voici un guide d\u00e9taill\u00e9 pour comprendre son fonctionnement avec plusieurs arguments, des s\u00e9parateurs personnalis\u00e9s et des fins de ligne diff\u00e9rentes.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#1-imprimer-plusieurs-arguments","title":"1. Imprimer plusieurs arguments","text":"<p>Vous pouvez passer plusieurs objets \u00e0 <code>print()</code>, s\u00e9par\u00e9s par des virgules. Par d\u00e9faut, Python ins\u00e8re un espace entre eux.</p> <pre><code>print(\"Bonjour\", \"tout\", \"le\", \"monde\")\n# Sortie : Bonjour tout le monde\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#2-utiliser-un-separateur-personnalise-sep","title":"2. Utiliser un s\u00e9parateur personnalis\u00e9 (<code>sep</code>)","text":"<p>Le param\u00e8tre <code>sep</code> permet de d\u00e9finir un s\u00e9parateur sp\u00e9cifique entre les arguments.</p> <pre><code>print(\"Bonjour\", \"tout\", \"le\", \"monde\", sep=\"-\")\n# Sortie : Bonjour-tout-le-monde\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#3-modifier-la-fin-de-ligne-end","title":"3. Modifier la fin de ligne (<code>end</code>)","text":"<p>Par d\u00e9faut, <code>print()</code> ajoute un saut de ligne (<code>\\n</code>). Vous pouvez le changer avec le param\u00e8tre <code>end</code>.</p> <pre><code>print(\"Bonjour\", end=\" \")\nprint(\"tout le monde\")\n# Sortie : Bonjour tout le monde (sur une seule ligne)\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#exemple-combine","title":"Exemple combin\u00e9","text":"<p>Voici un exemple combinant les deux param\u00e8tres :</p> <pre><code>print(\"Python\", \"est\", \"g\u00e9nial\", sep=\"*\", end=\"!\\n\")\n# Sortie : Python*est*g\u00e9nial!\n</code></pre> <p>Ces fonctionnalit\u00e9s rendent la fonction <code>print()</code> tr\u00e8s flexible pour formater vos sorties.</p> Citations <ul> <li>[1] https://www.ionos.fr/digitalguide/sites-internet/developpement-web/python-print/</li> <li>[2] https://deeplearning.lipingyang.org/2017/03/11/print-multiple-arguments-in-python3/</li> <li>[3] https://blog.alphorm.com/comprendre-et-manipuler-les-chaines-de-caracteres-en-python</li> <li>[4] https://python.sdv.u-paris.fr/03_affichage/</li> <li>[5] https://www.geeksforgeeks.org/how-to-print-multiple-arguments-in-python/</li> <li>[6] https://python.developpez.com/tutoriels/python-basic-par-exemple/?page=les-fonctions</li> <li>[7] https://www.w3schools.com/python/ref_func_print.asp</li> <li>[8] https://www.geeksforgeeks.org/how-to-pass-multiple-arguments-to-function/</li> <li>[9] https://www.geeksforgeeks.org/python-output-using-print-function/</li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#les-f-strings-en-python","title":"Les f-strings en Python","text":"<p>Les f-strings (cha\u00eenes litt\u00e9rales format\u00e9es) sont une fonctionnalit\u00e9 introduite dans Python 3.6 pour simplifier le formatage de cha\u00eenes. Elles permettent d\u2019ins\u00e9rer des variables, des expressions ou des calculs directement dans une cha\u00eene de caract\u00e8res, rendant le code plus lisible et concis.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#1-syntaxe-de-base","title":"1. Syntaxe de base","text":"<p>Pour cr\u00e9er une f-string, ajoutez la lettre <code>f</code> avant les guillemets de la cha\u00eene. Utilisez des accolades <code>{}</code> pour ins\u00e9rer des variables ou expressions.</p> <pre><code>nom = \"Alice\"\nage = 30\nprint(f\"Bonjour, je m'appelle {nom} et j'ai {age} ans.\")\n# Sortie : Bonjour, je m'appelle Alice et j'ai 30 ans.\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#2-inserer-des-expressions","title":"2. Ins\u00e9rer des expressions","text":"<p>Les f-strings permettent d\u2019\u00e9valuer des expressions directement dans les accolades.</p> <pre><code>a = 5\nb = 3\nprint(f\"La somme de {a} et {b} est {a + b}.\")\n# Sortie : La somme de 5 et 3 est 8.\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#3-formatage-avance","title":"3. Formatage avanc\u00e9","text":"<p>Vous pouvez appliquer un formatage pr\u00e9cis \u00e0 l\u2019int\u00e9rieur des accolades en utilisant des sp\u00e9cifications de format.</p> <ul> <li>Nombres flottants : Limiter le nombre de d\u00e9cimales.</li> </ul> <pre><code>pi = 3.14159\nprint(f\"La valeur de \u03c0 est approximativement {pi:.2f}.\")\n# Sortie : La valeur de \u03c0 est approximativement 3.14.\n</code></pre> <ul> <li>Alignement et largeur :</li> </ul> <pre><code>texte = \"Python\"\nprint(f\"{texte:&lt;10}\")  # Align\u00e9 \u00e0 gauche\nprint(f\"{texte:&gt;10}\")  # Align\u00e9 \u00e0 droite\nprint(f\"{texte:^10}\")  # Centr\u00e9\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#4-appels-de-fonctions","title":"4. Appels de fonctions","text":"<p>Les f-strings peuvent inclure des appels de fonctions ou des m\u00e9thodes.</p> <pre><code>nom = \"alice\"\nprint(f\"Nom en majuscules : {nom.upper()}\")\n# Sortie : Nom en majuscules : ALICE\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/01-affichage/#5-exemple-combine","title":"5. Exemple combin\u00e9","text":"<p>Voici un exemple combinant plusieurs fonctionnalit\u00e9s :</p> <pre><code>nom = \"Bob\"\nmontant = 1234.56789\nprint(f\"Bonjour {nom}, votre solde est de {montant:.2f} \u20ac.\")\n# Sortie : Bonjour Bob, votre solde est de 1234.57 \u20ac.\n</code></pre> <p>Les f-strings sont rapides, lisibles et flexibles, ce qui en fait un outil essentiel pour travailler avec des  cha\u00eenes en Python.</p> Citations <ul> <li>[1] https://www.geeksforgeeks.org/formatted-string-literals-f-strings-python/</li> <li>[2] http://cissandbox.bentley.edu/sandbox/wp-content/uploads/2022-02-10-Documentation-on-f-strings-Updated.pdf</li> <li>[3] https://realpython.com/python-f-strings/</li> <li>[4] https://www.freecodecamp.org/news/python-f-strings-tutorial-how-to-use-f-strings-for-string-formatting/</li> <li>[5] https://www.ionos.fr/digitalguide/sites-internet/developpement-web/python-f-strings/</li> <li>[6] https://www.docstring.fr/glossaire/f-string/</li> <li>[7] https://he-arc.github.io/livre-python/fstrings/index.html</li> <li>[8] https://www.w3schools.com/python/python_string_formatting.asp</li> </ul> <p>Note</p> <p>Page r\u00e9dig\u00e9e en partie avec l\u2019aide d\u2019un assistant IA, principalement \u00e0 l\u2019aide de Perplexity AI, avec le LLM Claude 3.5 Sonnet. L\u2019IA a \u00e9t\u00e9 utilis\u00e9e pour g\u00e9n\u00e9rer des explications, des exemples et/ou des suggestions de   structure. Toutes les informations ont \u00e9t\u00e9 v\u00e9rifi\u00e9es, \u00e9dit\u00e9es et compl\u00e9t\u00e9es par l\u2019auteur.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/","title":"2. Lire des donn\u00e9es sur l\u2019entr\u00e9e standard","text":""},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#la-fonction-input-et-la-conversion-en-int-ou-float","title":"La fonction <code>input()</code> et la conversion en <code>int</code> ou <code>float</code>","text":"<p>La fonction <code>input()</code> permet de demander une saisie \u00e0 l\u2019utilisateur. Par d\u00e9faut, elle retourne toujours une cha\u00eene de caract\u00e8res (<code>str</code>). Si vous souhaitez utiliser cette entr\u00e9e comme un nombre, il faut la convertir en un type num\u00e9rique comme <code>int</code> ou <code>float</code>.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#1-utilisation-de-base-de-input","title":"1. Utilisation de base de <code>input()</code>","text":"<pre><code>nom = input(\"Quel est votre nom ? \")\nprint(f\"Bonjour, {nom} !\")\n</code></pre> <ul> <li>Explication : Le texte entre parenth\u00e8ses est affich\u00e9 comme un message pour guider l\u2019utilisateur.</li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#2-conversion-en-int-ou-float","title":"2. Conversion en <code>int</code> ou <code>float</code>","text":"<p>Pour traiter des nombres, utilisez les fonctions de conversion <code>int()</code> ou <code>float()</code>.</p> <pre><code>age = input(\"Quel \u00e2ge avez-vous ? \")\nage = int(age)  # Conversion en entier\nprint(f\"Vous avez {age} ans.\")\n</code></pre> <pre><code>poids = input(\"Quel est votre poids (en kg) ? \")\npoids = float(poids)  # Conversion en nombre d\u00e9cimal\nprint(f\"Votre poids est {poids} kg.\")\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#3-risque-derreurs-lors-de-la-conversion","title":"3. Risque d\u2019erreurs lors de la conversion","text":"<p>Si l\u2019utilisateur saisit une valeur non convertible (par exemple, du texte au lieu d\u2019un nombre), Python g\u00e9n\u00e8re une erreur de type <code>ValueError</code>.</p> <p>Exemple d\u2019erreur :</p> <pre><code>valeur = input(\"Entrez un nombre : \")\nvaleur = int(valeur)  # Erreur si l'entr\u00e9e n'est pas un nombre\n# Si l'utilisateur tape \"abc\", l'erreur sera :\n# ValueError: invalid literal for int() with base 10: 'abc'\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#points-importants-a-retenir","title":"Points importants \u00e0 retenir","text":"<ul> <li>La conversion doit \u00eatre utilis\u00e9e uniquement si l\u2019entr\u00e9e est valide.</li> <li>Sans gestion d\u2019erreurs (<code>try/except</code>), le programme s\u2019arr\u00eatera en cas de probl\u00e8me.</li> </ul> Citations <ul> <li>[1] https://www.w3schools.com/python/ref_func_input.asp</li> <li>[2] https://labex.io/questions/how-to-handle-type-conversion-errors-in-python-290726</li> <li>[3] https://www.docstring.fr/blog/interagir-avec-un-utilisateur-grace-la-fonction-in/</li> <li>[4] https://llego.dev/posts/handling-errors-exceptions-type-conversion-fails-python/</li> <li>[5] https://cscircles.cemc.uwaterloo.ca/5-fr/</li> <li>[6] https://docs.python.org/fr/3/tutorial/errors.html</li> <li>[7] https://apprendre.modulo-info.ch/prog1/questionner.html</li> <li>[8] https://www.workdispo.com/blog/input-python</li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#differences-entre-int-round-et-le-formatage-2f-dans-les-f-strings","title":"Diff\u00e9rences entre <code>int</code>, <code>round</code> et le formatage <code>.2f</code> dans les f-strings","text":""},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#1-fonction-int","title":"1. Fonction <code>int</code>","text":"<ul> <li>La fonction <code>int()</code> tronque toujours la partie d\u00e9cimale d\u2019un nombre flottant, sans arrondi.</li> <li>Elle convertit un flottant en entier en supprimant tout ce qui suit la virgule.</li> </ul> <p>Exemple :</p> <pre><code>x = 5.76543\nprint(int(x))  # Sortie : 5\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#2-fonction-round","title":"2. Fonction <code>round</code>","text":"<ul> <li>La fonction <code>round()</code> arrondit un nombre au plus proche entier ou \u00e0 un certain nombre de d\u00e9cimales.</li> <li>Par d\u00e9faut, elle retourne un entier si aucun argument pour les d\u00e9cimales n\u2019est fourni.</li> <li>Elle utilise l\u2019arrondi \u201cpair\u201d (ou \u201cround half to even\u201d) : si le chiffre apr\u00e8s la virgule est exactement 0.5, il   choisit l\u2019entier pair le plus proche.</li> </ul> <p>Exemple :</p> <pre><code>x = 4.5\ny = 5.5\nprint(round(x))  # Sortie : 4 (arrondi vers l'entier pair)\nprint(round(y))  # Sortie : 6 (arrondi vers l'entier pair)\n</code></pre> <p>Avec pr\u00e9cision :</p> <pre><code>z = 5.76543\nprint(round(z, 2))  # Sortie : 5.77 (arrondi \u00e0 deux d\u00e9cimales)\n</code></pre> <p>Attention</p> <p>Il est important de noter que <code>round</code> peut parfois donner des r\u00e9sultats surprenants en raison des limitations de la  repr\u00e9sentation en virgule flottante. Par exemple : <pre><code>print(round(2.675, 2))  # R\u00e9sultat : 2.67 (au lieu de 2.68)\n</code></pre></p>"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#3-formatage-avec-2f-dans-les-f-strings","title":"3. Formatage avec <code>.2f</code> dans les f-strings","text":"<ul> <li>Le formatage <code>.2f</code> dans une f-string ne modifie pas la valeur r\u00e9elle du nombre, mais contr\u00f4le uniquement son affichage   en arrondissant visuellement \u00e0 deux d\u00e9cimales.</li> <li>Contrairement \u00e0 <code>round()</code>, il ne retourne pas un nouveau nombre, mais une cha\u00eene format\u00e9e.</li> </ul> <p>Exemple :</p> <pre><code>x = 5.76543\nprint(f\"{x:.2f}\")  # Sortie : 5.77 (affichage arrondi \u00e0 deux d\u00e9cimales)\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#differences-entre-round-et-2f","title":"Diff\u00e9rences entre <code>round</code> et <code>.2f</code>","text":"Fonctionnalit\u00e9 <code>round()</code> <code>.2f</code> dans f-strings Type de retour Nombre (<code>int</code> ou <code>float</code>) Cha\u00eene de caract\u00e8res Modification r\u00e9elle ? Oui Non (affichage uniquement) Usage principal Calculs Formatage visuel"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#resume-des-differences-principales","title":"R\u00e9sum\u00e9 des diff\u00e9rences principales","text":"<ul> <li><code>int()</code> tronque sans arrondir.</li> <li><code>round()</code> modifie r\u00e9ellement la valeur en arrondissant.</li> <li><code>.2f</code> est utilis\u00e9 pour afficher un nombre avec un format visuel pr\u00e9cis sans changer sa valeur r\u00e9elle.</li> </ul> Citations <ul> <li>[1] https://www.w3schools.com/python/ref_func_round.asp</li> <li>[2] https://geekflare.com/fr/round-numbers-in-python-with-examples/</li> <li>[3] https://discuss.python.org/t/built-in-types-int-round-or-truncate-please-elaborate/24840</li> <li>[4] https://waytolearnx.com/2020/07/fonction-round-python.html</li> <li>[5] https://realpython.com/python-rounding/</li> <li>[6] https://www.guru99.com/fr/round-function-python.html</li> <li>[7] https://www.geeksforgeeks.org/round-function-python/</li> <li>[8] https://koor.fr/Python/API/python/builtins/round.wp</li> <li>[9] https://stackoverflow.com/questions/43660910/python-difference-between-round-and-int</li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/02-entr%C3%A9es/#est-ce-que-les-f-strings-utilisent-la-regle-round-half-to-even-comme-la-fonction-round","title":"Est-ce que les f-strings utilisent la r\u00e8gle \u201cround half to even\u201d comme la fonction round ?","text":"<p>Non, les f-strings en Python n\u2019utilisent pas la r\u00e8gle \u201cround half to even\u201d comme la fonction <code>round()</code>.</p> <p>Les f-strings avec un format comme <code>.2f</code> effectuent un arrondi visuel bas\u00e9 sur une r\u00e8gle d\u2019arrondi classique (round half up), o\u00f9 les valeurs \u00e0 exactement 0.5 apr\u00e8s le dernier chiffre significatif sont arrondies vers le haut, ind\u00e9pendamment de la parit\u00e9 du chiffre pr\u00e9c\u00e9dent. En revanche, la fonction <code>round()</code> suit la r\u00e8gle \u201cround half to even\u201d (ou \u201cbanker\u2019s rounding\u201d), qui arrondit les valeurs \u00e0 0.5 vers l\u2019entier pair le plus proche[1][3][5].</p> <p>Exemple :</p> <pre><code>x = 2.5\nprint(f\"{x:.0f}\")  # Sortie : 3 (arrondi classique)\nprint(round(x))  # Sortie : 2 (arrondi pair)\n</code></pre> Citations <ul> <li>[1] https://sparkbyexamples.com/python/python-limit-floats-to-two-decimal-points/</li> <li>[2] https://rowannicholls.github.io/python/data/rounding_off.html</li> <li>[3] https://realpython.com/python-rounding/</li> <li>[4] https://en.wikipedia.org/wiki/Nearest_integer_function</li> <li>[5] https://github.com/rust-lang/rust/issues/70336</li> <li>[6] https://stackoverflow.com/questions/10825926/python-3-x-rounding-behavior</li> <li>[7] https://gist.ly/youtube-summarizer/mastering-pythons-round-function-a-comprehensive-guide</li> <li>[8] https://schneide.blog/tag/python/</li> </ul> <p>Note</p> <p>Page r\u00e9dig\u00e9e en partie avec l\u2019aide d\u2019un assistant IA, principalement \u00e0 l\u2019aide de Perplexity AI, avec le LLM Claude 3.5 Sonnet. L\u2019IA a \u00e9t\u00e9 utilis\u00e9e pour g\u00e9n\u00e9rer des explications, des exemples et/ou des suggestions de structure. Toutes les informations ont \u00e9t\u00e9 v\u00e9rifi\u00e9es, \u00e9dit\u00e9es et compl\u00e9t\u00e9es par l\u2019auteur.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/03-random/","title":"3. Importation de modules","text":""},{"location":"R%C3%A9sum%C3%A9/Notions/03-random/#exemple-avec-random","title":"Exemple avec <code>random</code>","text":"<p>En Python, les modules sont des ensembles de fonctions et de variables pr\u00eates \u00e0 l\u2019emploi. Pour utiliser un module, il faut d\u2019abord l\u2019importer dans votre programme. Le module <code>random</code> est un exemple courant utilis\u00e9 pour g\u00e9n\u00e9rer des nombres al\u00e9atoires.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/03-random/#1-importer-le-module-random","title":"1. Importer le module <code>random</code>","text":"<p>Pour importer le module, utilisez la commande suivante :</p> <pre><code>import random\n</code></pre> <p>Cela donne acc\u00e8s \u00e0 toutes les fonctions du module <code>random</code>.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/03-random/#2-la-fonction-randint","title":"2. La fonction <code>randint</code>","text":"<p>La fonction <code>randint(a, b)</code> g\u00e9n\u00e8re un entier al\u00e9atoire compris entre les bornes incluses \\(a\\) et \\(b\\).</p> <p>Syntaxe :</p> <pre><code>random.randint(a, b)\n</code></pre> <ul> <li><code>a</code> : borne inf\u00e9rieure (incluse).</li> <li><code>b</code> : borne sup\u00e9rieure (incluse).</li> </ul> <p>Exemple :</p> <pre><code>import random\n\nnombre = random.randint(1, 10)\nprint(f\"Nombre entier al\u00e9atoire entre 1 et 10 : {nombre}\")\n</code></pre> <ul> <li>Si vous ex\u00e9cutez ce code plusieurs fois, il produira des entiers comme <code>3</code>, <code>7</code>, ou <code>10</code>.</li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/03-random/#3-la-fonction-uniform","title":"3. La fonction <code>uniform</code>","text":"<p>La fonction <code>uniform(a, b)</code> g\u00e9n\u00e8re un nombre flottant al\u00e9atoire compris entre \\(a\\) et \\(b\\), avec \\(a\\) inclus et \\(b\\) potentiellement inclus.</p> <p>Syntaxe :</p> <pre><code>random.uniform(a, b)\n</code></pre> <ul> <li><code>a</code> : borne inf\u00e9rieure.</li> <li><code>b</code> : borne sup\u00e9rieure.</li> </ul> <p>Exemple :</p> <pre><code>import random\n\nnombre_flottant = random.uniform(1.5, 5.5)\nprint(f\"Nombre flottant al\u00e9atoire entre 1.5 et 5.5 : {nombre_flottant}\")\n</code></pre> <ul> <li>Ce code peut produire des valeurs comme <code>2.34</code>, <code>4.78</code>, ou <code>5.5</code>.</li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/03-random/#resume-des-differences-entre-randint-et-uniform","title":"R\u00e9sum\u00e9 des diff\u00e9rences entre <code>randint</code> et <code>uniform</code>","text":"Fonction Type de valeur g\u00e9n\u00e9r\u00e9e Bornes incluses ? <code>randint(a, b)</code> Entier Oui <code>uniform(a, b)</code> Flottant Oui pour \\(a\\), \\(b\\) potentiellement <p>Ces fonctions sont tr\u00e8s utiles pour simuler des \u00e9v\u00e9nements al\u00e9atoires ou g\u00e9n\u00e9rer des donn\u00e9es de test dans vos programmes Python.</p> Citations <ul> <li>[1] https://www.cs.swarthmore.edu/~adanner/cs21/f09/randomlib.php</li> <li>[2] https://www.pythonforbeginners.com/random/how-to-use-the-random-module-in-python</li> <li>[3] https://www.geeksforgeeks.org/python-random-module/</li> <li>[4] https://docs.python.org/zh-tw/3/library/random.html</li> <li>[5] https://www.w3schools.com/python/ref_random_random.asp</li> <li>[6] https://www.ionos.fr/digitalguide/sites-internet/developpement-web/python-randint/</li> <li>[7] https://stackoverflow.com/questions/63246858/how-do-i-get-the-random-module-to-work-did-i-forget-to-import-something-or-d</li> <li>[8] https://python-forum.io/thread-16247.html</li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/03-random/#potentiellement-incluse","title":"Potentiellement incluse","text":"<p>La borne sup\u00e9rieure \\(b\\) est dite \u201cpotentiellement incluse\u201d dans la fonction <code>random.uniform(a, b)</code> en raison des limitations de l\u2019arithm\u00e9tique en virgule flottante utilis\u00e9e par Python. Voici une explication d\u00e9taill\u00e9e :</p> <ol> <li> <p>Comment fonctionne <code>random.uniform</code> :    La fonction g\u00e9n\u00e8re un nombre al\u00e9atoire en utilisant la formule suivante :    \\(a + (b - a) \\times \\text{random()}\\),    o\u00f9 <code>random()</code> produit un nombre flottant dans l\u2019intervalle \\([0, 1)\\). En th\u00e9orie, cela signifie que le r\u00e9sultat    devrait \u00eatre dans l\u2019intervalle \\([a, b)\\), \\(b\\) \u00e9tant exclu.</p> </li> <li> <p>Effet des arrondis flottants :    En pratique, \u00e0 cause des impr\u00e9cisions li\u00e9es au stockage des nombres en virgule flottante, il est possible que le    calcul produise une valeur exactement \u00e9gale \u00e0 \\(b\\). Cela d\u00e9pend de la pr\u00e9cision des calculs effectu\u00e9s par le    processeur et de la repr\u00e9sentation interne des nombres.</p> </li> <li> <p>Cons\u00e9quences :</p> <ul> <li>Dans la plupart des cas, \\(b\\) sera exclu.</li> <li>Cependant, il est rare mais possible que \\(b\\) soit inclus en raison d\u2019arrondis sp\u00e9cifiques.</li> </ul> </li> </ol> <p>Exemple :</p> <pre><code>import random\n\n# Exemple o\u00f9 b pourrait \u00eatre inclus\nfor _ in range(100000):\n    x = random.uniform(0, 1)\n    if x == 1:  # V\u00e9rifie si b est inclus\n        print(\"La borne sup\u00e9rieure 1 a \u00e9t\u00e9 incluse.\")\n        break\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/03-random/#resume","title":"R\u00e9sum\u00e9","text":"<ul> <li>La borne \\(b\\) est potentiellement incluse dans <code>random.uniform(a, b)</code> \u00e0 cause des arrondis flottants.</li> <li>Cela n\u2019a g\u00e9n\u00e9ralement aucune incidence pratique, car les nombres g\u00e9n\u00e9r\u00e9s sont continus et il y a une infinit\u00e9 de   valeurs possibles entre \\(a\\) et \\(b\\).</li> </ul> Citations <ul> <li>[1] https://www.w3schools.com/python/ref_random_uniform.asp</li> <li>[2] https://stackoverflow.com/questions/78054851/when-using-random-uniforma-b-is-b-inclusive-or-exclusive</li> <li>[3] https://numpy.org/doc/2.1/reference/random/generated/numpy.random.uniform.html</li> <li>[4] https://zestedesavoir.com/tutoriels/2514/un-zeste-de-python/8-bibliotheque-standard/2-random/</li> <li>[5] https://docs.python.org/fr/3.13/library/random.html</li> <li>[6] https://scicomp.stackexchange.com/questions/29959/uniform-dots-distribution-in-a-sphere</li> <li>[7] https://fiches-isn.readthedocs.io/fr/latest/random.html</li> <li>[8] https://openclassrooms.com/fr/courses/6204541-initiez-vous-a-python-pour-lanalyse-de-donnees/6252451-manipulez-des-nombres-aleatoires-avec-le-module-random</li> </ul> <p>Note</p> <p>Page r\u00e9dig\u00e9e en partie avec l\u2019aide d\u2019un assistant IA, principalement \u00e0 l\u2019aide de Perplexity AI, avec le LLM Claude 3.5 Sonnet. L\u2019IA a \u00e9t\u00e9 utilis\u00e9e pour g\u00e9n\u00e9rer des explications, des exemples et/ou des suggestions de   structure. Toutes les informations ont \u00e9t\u00e9 v\u00e9rifi\u00e9es, \u00e9dit\u00e9es et compl\u00e9t\u00e9es par l\u2019auteur.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/04-numpy/","title":"4. Module <code>numpy</code>","text":""},{"location":"R%C3%A9sum%C3%A9/Notions/04-numpy/#introduction-a-numpy-et-ses-fonctions-mathematiques","title":"Introduction \u00e0 NumPy et ses fonctions math\u00e9matiques","text":"<p>NumPy est une biblioth\u00e8que essentielle pour le calcul scientifique en Python. Elle offre des outils puissants pour effectuer des calculs math\u00e9matiques rapides et pr\u00e9cis, notamment gr\u00e2ce \u00e0 ses fonctions optimis\u00e9es pour les tableaux  (ndarray). Voici une introduction aux fonctions math\u00e9matiques de base de NumPy, incluant les logarithmes, racines carr\u00e9es, fonctions trigonom\u00e9triques, et constantes math\u00e9matiques.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/04-numpy/#1-constantes-mathematiques-npe-et-nppi","title":"1. Constantes math\u00e9matiques : <code>np.e</code> et <code>np.pi</code>","text":"<p>NumPy fournit des constantes int\u00e9gr\u00e9es pour les nombres math\u00e9matiques importants :</p> <ul> <li><code>np.e</code> : La base du logarithme naturel (environ 2.718).</li> <li><code>np.pi</code> : La valeur de \\(\\(\\pi\\)\\) (environ 3.14159).</li> </ul> <p>Exemple :</p> <pre><code>import numpy as np\n\nprint(f\"Constante e : {np.e}\")\nprint(f\"Constante pi : {np.pi}\")\n# Sortie :\n# Constante e : 2.718281828459045\n# Constante pi : 3.141592653589793\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/04-numpy/#2-logarithmes","title":"2. Logarithmes","text":"<p>NumPy propose plusieurs fonctions pour calculer diff\u00e9rents types de logarithmes :</p> <ul> <li><code>np.log(x)</code> : Logarithme naturel (\\(\\(\\ln(x)\\)\\)).</li> <li><code>np.log10(x)</code> : Logarithme d\u00e9cimal (\\(\\(\\log_{10}(x)\\)\\)).</li> </ul> <p>Exemple :</p> <pre><code>x = np.array([1, np.e, 10])\nprint(np.log(x))  # Logarithme naturel\n# Sortie : [0.         1.         2.30258509]\n\nprint(np.log10(x))  # Logarithme d\u00e9cimal\n# Sortie : [0. 1. 1.]\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/04-numpy/#3-racine-carree","title":"3. Racine carr\u00e9e","text":"<p>La fonction <code>np.sqrt(x)</code> calcule la racine carr\u00e9e de chaque \u00e9l\u00e9ment d\u2019un tableau ou d\u2019un nombre.</p> <p>Exemple :</p> <pre><code>x = np.array([4, 9, 16])\nprint(np.sqrt(x))\n# Sortie : [2. 3. 4.]\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/04-numpy/#4-fonctions-trigonometriques","title":"4. Fonctions trigonom\u00e9triques","text":"<p>NumPy propose des fonctions pour les calculs trigonom\u00e9triques classiques :</p> <ul> <li><code>np.sin(x)</code> : Calcule le sinus.</li> <li><code>np.cos(x)</code> : Calcule le cosinus.</li> <li><code>np.tan(x)</code> : Calcule la tangente.</li> </ul> <p>Ces fonctions utilisent des angles exprim\u00e9s en radians.</p> <p>Exemple avec radians :</p> <pre><code>angles = np.array([0, np.pi / 2, np.pi])\nprint(np.sin(angles))  # Sortie : [0. 1. 0.]\nprint(np.cos(angles))  # Sortie : [1. 0. -1.]\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/04-numpy/#5-conversion-entre-degres-et-radians","title":"5. Conversion entre degr\u00e9s et radians","text":"<p>Pour travailler avec des angles exprim\u00e9s en degr\u00e9s, NumPy propose deux fonctions utiles :</p> <ul> <li><code>np.radians(degrees)</code> : Convertit des degr\u00e9s en radians.</li> <li><code>np.degrees(radians)</code> : Convertit des radians en degr\u00e9s.</li> </ul> <p>Exemple :</p> <pre><code>deg = np.array([0, 90, 180])\nrad = np.radians(deg)\nprint(rad)  # Sortie : [0.         1.57079633 3.14159265]\n\nradians = np.array([0, np.pi / 2, np.pi])\ndeg = np.degrees(radians)\nprint(deg)  # Sortie : [  0.  90. 180.]\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/04-numpy/#resume-des-principales-fonctions-mathematiques-de-numpy","title":"R\u00e9sum\u00e9 des principales fonctions math\u00e9matiques de NumPy","text":"Fonction Description Exemple d\u2019utilisation <code>np.e</code> Constante \\(\\(e\\)\\) <code>np.e</code> \u2192 <code>2.718281828459045</code> <code>np.pi</code> Constante \\(\\(\\pi\\)\\) <code>np.pi</code> \u2192 <code>3.141592653589793</code> <code>np.log(x)</code> Logarithme naturel (\\(\\(\\ln(x)\\)\\)) <code>np.log(10)</code> \u2192 <code>2.302585092994046</code> <code>np.log10(x)</code> Logarithme d\u00e9cimal (\\(\\(\\log_{10}(x)\\)\\)) <code>np.log10(100)</code> \u2192 <code>2.0</code> <code>np.sqrt(x)</code> Racine carr\u00e9e <code>np.sqrt(16)</code> \u2192 <code>4.0</code> <code>np.sin(x)</code> Sinus (angle en radians) <code>np.sin(np.pi/2)</code> \u2192 <code>1.0</code> <code>np.cos(x)</code> Cosinus (angle en radians) <code>np.cos(0)</code> \u2192 <code>1.0</code> <code>np.tan(x)</code> Tangente (angle en radians) <code>np.tan(np.pi/4)</code> \u2192 <code>1.0</code> <code>np.radians(x)</code> Conversion degr\u00e9s \u2192 radians <code>np.radians(180)</code> \u2192 <code>3.141592653589793</code> <code>np.degrees(x)</code> Conversion radians \u2192 degr\u00e9s <code>np.degrees(np.pi/2)</code> \u2192 <code>90.0</code> <p>Avec ces outils, NumPy simplifie consid\u00e9rablement les calculs scientifiques et num\u00e9riques ! Vous pouvez maintenant manipuler facilement des logarithmes, racines carr\u00e9es et fonctions trigonom\u00e9triques tout en travaillant avec des angles exprim\u00e9s en degr\u00e9s ou radians.</p> <p>Note</p> <p>Page r\u00e9dig\u00e9e en partie avec l\u2019aide d\u2019un assistant IA, principalement \u00e0 l\u2019aide de Perplexity AI, avec le LLM Claude 3.5 Sonnet. L\u2019IA a \u00e9t\u00e9 utilis\u00e9e pour g\u00e9n\u00e9rer des explications, des exemples et/ou des suggestions de  structure. Toutes les informations ont \u00e9t\u00e9 v\u00e9rifi\u00e9es, \u00e9dit\u00e9es et compl\u00e9t\u00e9es par l\u2019auteur.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/05-pyplot/","title":"5. Module <code>pyplot</code>","text":""},{"location":"R%C3%A9sum%C3%A9/Notions/05-pyplot/#introduction-a-matplotlibpyplot","title":"Introduction \u00e0 <code>matplotlib.pyplot</code>","text":"<p><code>matplotlib.pyplot</code> est un module de la biblioth\u00e8que Matplotlib qui fournit une interface simple et intuitive pour cr\u00e9er des graphiques, inspir\u00e9e de MATLAB. Chaque fonction de <code>pyplot</code> modifie une figure ou un graphique, permettant de tracer, personnaliser et afficher des visualisations.</p>"},{"location":"R%C3%A9sum%C3%A9/Notions/05-pyplot/#1-creation-dune-figure-pltfigure","title":"1. Cr\u00e9ation d\u2019une figure : <code>plt.figure()</code>","text":"<p>La fonction <code>plt.figure()</code> cr\u00e9e une nouvelle figure ou active une figure existante. Une figure est le conteneur principal pour un graphique.</p> <p>Exemple :</p> <pre><code>import matplotlib.pyplot as plt\n\nfig = plt.figure(figsize=(8, 6))  # Cr\u00e9e une figure de taille 8x6 pouces\n</code></pre> <ul> <li>Param\u00e8tres importants :<ul> <li><code>figsize=(width, height)</code>: Dimensions de la figure en pouces.</li> <li><code>dpi</code>: R\u00e9solution en points par pouce (par d\u00e9faut 100).</li> </ul> </li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/05-pyplot/#2-tracer-des-courbes-pltplot","title":"2. Tracer des courbes : <code>plt.plot()</code>","text":"<p>La fonction <code>plt.plot()</code> trace des courbes reliant des points donn\u00e9s par leurs abscisses et ordonn\u00e9es.</p> <p>Exemple :</p> <pre><code>x = [1, 2, 3, 4]\ny = [10, 20, 25, 30]\n\nplt.plot(x, y, label=\"Courbe\", color=\"blue\", linestyle=\"--\", marker=\"o\")\nplt.title(\"Exemple de graphique\")\nplt.xlabel(\"Axe X\")\nplt.ylabel(\"Axe Y\")\nplt.legend()  # Ajoute une l\u00e9gende\n</code></pre> <ul> <li>Options courantes :<ul> <li><code>color</code>: Couleur de la courbe (<code>\"red\"</code>, <code>\"blue\"</code>, etc.).</li> <li><code>linestyle</code>: Style de ligne (<code>\"--\"</code>, <code>\"-\"</code>, etc.).</li> <li><code>marker</code>: Marqueur pour les points (<code>\"o\"</code>, <code>\"s\"</code>, etc.).</li> </ul> </li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/05-pyplot/#3-afficher-la-figure-pltshow","title":"3. Afficher la figure : <code>plt.show()</code>","text":"<p>La fonction <code>plt.show()</code> affiche toutes les figures cr\u00e9\u00e9es jusqu\u2019\u00e0 pr\u00e9sent. Elle est indispensable pour visualiser vos graphiques dans un script Python.</p> <p>Exemple :</p> <pre><code>plt.show()\n</code></pre> <ul> <li>En mode interactif (comme Jupyter Notebook), cette commande est souvent implicite.</li> </ul>"},{"location":"R%C3%A9sum%C3%A9/Notions/05-pyplot/#4-histogrammes-plthist","title":"4. Histogrammes : <code>plt.hist()</code>","text":"<p>La fonction <code>plt.hist()</code> cr\u00e9e un histogramme pour visualiser la distribution des donn\u00e9es.</p> <p>Exemple :</p> <pre><code>data = [1, 2, 2, 3, 3, 3, 4, 4, 5]\nplt.hist(data, bins=5, color=\"green\", edgecolor=\"black\")\nplt.title(\"Histogramme\")\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/05-pyplot/#5-graphiques-en-barres-pltbar","title":"5. Graphiques en barres : <code>plt.bar()</code>","text":"<p>La fonction <code>plt.bar()</code> trace des graphiques en barres verticales.</p> <p>Exemple :</p> <pre><code>categories = [\"A\", \"B\", \"C\"]\nvalues = [10, 15, 7]\n\nplt.bar(categories, values, color=\"purple\")\nplt.title(\"Graphique en barres\")\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/05-pyplot/#6-conversion-entre-figures-multiples","title":"6. Conversion entre figures multiples","text":"<p>Vous pouvez cr\u00e9er et g\u00e9rer plusieurs figures avec <code>figure()</code> et basculer entre elles.</p> <p>Exemple :</p> <pre><code>f1 = plt.figure(1)\nplt.plot([0, 1], [0, 1], label=\"Figure 1\")\nplt.legend()\n\nf2 = plt.figure(2)\nplt.plot([0, 1], [1, 0], label=\"Figure 2\")\nplt.legend()\n\nplt.show()\n</code></pre>"},{"location":"R%C3%A9sum%C3%A9/Notions/05-pyplot/#7-resume-des-fonctions-principales","title":"7. R\u00e9sum\u00e9 des fonctions principales","text":"Fonction Description <code>plt.figure()</code> Cr\u00e9e ou active une figure <code>plt.plot()</code> Trace une courbe <code>plt.show()</code> Affiche toutes les figures <code>plt.hist()</code> Cr\u00e9e un histogramme <code>plt.bar()</code> Trace un graphique en barres verticales <code>plt.title()</code> D\u00e9finit le titre du graphique <code>plt.xlabel()</code> D\u00e9finit l\u2019\u00e9tiquette de l\u2019axe X <code>plt.ylabel()</code> D\u00e9finit l\u2019\u00e9tiquette de l\u2019axe Y <code>plt.legend()</code> Ajoute une l\u00e9gende au graphique <p>Avec ces outils de base de Matplotlib et son module Pyplot, vous pouvez cr\u00e9er rapidement des graphiques simples ou complexes pour visualiser vos donn\u00e9es efficacement !</p> Citations <ul> <li>[1] https://docs.kanaries.net/fr/topics/Matplotlib/pyplot-figure</li> <li>[2] https://www.geeksforgeeks.org/matplotlib-figure-figure-show-in-python/</li> <li>[3] https://courspython.com/introduction-courbes.html</li> <li>[4] https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.show.html</li> <li>[5] https://matplotlib.org/stable/api/pyplot_summary.html</li> <li>[6] https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.figure.html</li> <li>[7] https://matplotlib.org/stable/tutorials/pyplot.html</li> <li>[8] https://matplotlib.org/3.1.1/api/_as_gen/matplotlib.pyplot.show.html</li> <li>[9] https://stackoverflow.com/questions/2397791/how-can-i-show-figures-separately</li> </ul> <p>Note</p> <p>Page r\u00e9dig\u00e9e en partie avec l\u2019aide d\u2019un assistant IA, principalement \u00e0 l\u2019aide de Perplexity AI, avec le LLM Claude 3.5 Sonnet. L\u2019IA a \u00e9t\u00e9 utilis\u00e9e pour g\u00e9n\u00e9rer des explications, des exemples et/ou des suggestions de structure. Toutes les informations ont \u00e9t\u00e9 v\u00e9rifi\u00e9es, \u00e9dit\u00e9es et compl\u00e9t\u00e9es par l\u2019auteur.</p>"}]}